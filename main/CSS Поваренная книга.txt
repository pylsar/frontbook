CSS записывается в отдельный файл.(можно его писать внутри HTML , но это плохо)
селекторы: body, h1, h3
есть селекторы по тэгу и селекторы по идентификатору
селектор по тегу: 	тэг
			{
			}
селектор по нескольким тэгам:
			тэг, тэг
			{
			}
селектор по идентификатору:
			#название которое мы дали
			{
			}
селектор по классу:	
			.(точка)название которое мы дали
			{
			}	
все действия заканчиваются ;
блок объявления стилей: всё что находится внутри {}
color:red  до : это свойства, после : это значение

примерная суть CSS:
			селектор
			{ свойство1:значение1;
			  свойство2:значение2;
			}
каждое свойство с новой строки(так круто и не запутаешься)
чтобы связать CSS с HTML, надо в <head>HTML сослаться на наш CSS файл:
	<link rel="stylesheet" type="text/css" href="файл стилей.css"/>  
font-size: тут пишем размер либо в пикселях либо в процентах. во всех браузерах стандартный размер текста = 16 пикселям. 1em=100%=16px=12pt(pt-поинт=1\72 дюйма)
font-family: тут пишем название шрифта.(Бывают sans-serif(без засечек), serif(с засечками),monospace(растянутый),cursive)
	если используются названия в несколько слов, то их надо заключать в кавычки: "Times New Roman"
text-aligh: выравнивание(лево, право, центр, равномерно)
text-indent: красная строка(измеряется в пикселях или процентах)
line-height:  расстояние между строк (измеряется в пикселях или или множителях. 1 множитель = размер шрифта в пикселях)

{
font-size:16px;
line-height:1.5;
font-family: Arial, Verdana, Helvetica, sens-serif;
}
это тоже самое что: {16/1.5 Arial, Verdana, Helvetica, sens-serif;}
Синтаксис:
font: [font-style||font-variant||font-weight] font-size [/line-height] font-family | inherit
В качестве обязательных значений свойства font указывается размер шрифта и его семейство. Остальные значения являются опциональными и задаются при желании. 


идентификатор: присваиваем идентификатор тому, что хотим выделить отдельно. идентификатор не может начинаться на цифру!!!
пример: в HTML <b>привет</b> будет выглядеть следующим образом: <b><id="не начинается с цифры">привет</b>(проверить)

идентификатор класса: присваеваем нужный класс путём class="название класса". не может начинаться с цифры.классов может быть 
сколько угодно у 1 значения
Комментарий /**/

reset.css - сбрасывает все правила в браузерах  и все придётся делать с нуля (нужно скачать с инета и подключить как обычный css)
normalize.css - адаптированые правила в браузере (нужно скачать с инета и подключить как обычный css)

псевдокласс first-child появился с css1, в то время как last-child появился только с css3. поэтому могут быть проблемы 
с last-child в кроссбраузерности.
	 

свойство transition лучше писать не в родитель:hover  а в родитель, тогда плавно будет начало и конец(например когда хотим чтобы картинка
увеличивалась при наведении мышки на неё)
span - строчный элемент (ширина контекста, игнорирует width и height, новый span продолжает строку)
div - блочный (ширина 100%,каждый новый блок с новой строки)
overflow: hidden мы задаём для того блока, который обтекает (картинку ставим слева а текст обтекает справа. задаём для текста)

когда у нас 2 блока слева и справа(с помощью float) и мы хотим сделать зазор между ними, то надо левому блоку дать margin-right 

блочные объекты нельзя вкладывать в строчные объекты

для глобальных блоков(wrapper и тд) лучше не писать height, а писать min-height;

для адаптивной вёрстки прописываем не width  а max-width(чтобы не появилось полосы прокрутки);
для адаптивной вёрстки прописываем в хэдэ <meta name="viewport" content="width=device-width, initial-scale=1"> (если этого не сделать но на айфонах(но не уверен что только на них)
будет маштаб уменьшен и придётся пальцами раздвигать экран чтобы прочитать). в css изменяем харки которые начинают ломаться при уменьшении экрана (с помощью медиазапросов)
initial-scale=1"(это стартовый масштаб) запрещает увеличивать экран на смартфонах пальцами



для блоков фиксированую высоту лучше не задавать.(исключения иконки или картинки) если надо задать то лучше использовать min-height
если есть несколько вариантов как дать отступ, то лучше давать margin-bottom
vertical-align:top на случай если тестк стал плясать(по умалчанию строится по базовой линии, поэтому если текст в 1 строку и в 2 строки, то он может быть не на одной линии)



анимация для кнопки transition: 0.2s ease-out-начинается быстро и заканчивается медленее.
box-sizing: border-box (изначально реальная ширина= width+padding+border. border-box  говорит что тепеь ширину считаем единым целом. убирает полосу прокрутки)


Чтобы переключить браузер в более удобный для чтения режим, необходимо использовать метаэлемент viewport:
									<meta name="viewport" content="width=device-width, initial-scale=1">



background-size: cover; - Масштабирует изображение с сохранением пропорций так, чтобы его ширина или высота равнялась ширине или высоте блока.



Если надо сделать подпись на картинке(так чтобы по центру было), то задаём position absolute, left 0, top 0. и чтобы поднять на половину ширины текста делаем:
	transform: translateY(-50%) (смещаем по Y на 50%)

Если на флексах не хочешь переносить какуюто строку то : white-space: nowrap

Z индекс работает только если у объекта есть position: absolute или relative

width: calc(25% - 30px);
можно по ховеру делать эффекты на следующий блок(обязательно соседний) через селектор плюс
	пример: .select1:hover + .select2 {color:green;}